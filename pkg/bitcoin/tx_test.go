package bitcoin_test

import (
	"bytes"
	"encoding/hex"
	"testing"

	"github.com/LiquidCats/watcher/v2/pkg/bitcoin"
	"github.com/btcsuite/btcd/chaincfg"
	"github.com/btcsuite/btcd/wire"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestP2pClient_transformIntoAddress(t *testing.T) {
	tests := []struct {
		name            string
		rawTxHex        string
		expectedAddress string
		params          *chaincfg.Params
		executor        bitcoin.TxTransformer
	}{
		{
			name:            "P2WPKH",
			rawTxHex:        "02000000000101e9b3e34da8e70448bafbec2e0649db221c153315ac0c59e0c8a07edb4aa942260000000000f0ffffff04fbbdc90300000000160014015f524f21a6d8e0c8cdf9338467814294dd9fbb691f0b00000000001976a9143aa0b34254314a3ea17cb7e66fb1ae936da8f8c388ac6c241000000000001976a914b3a1d90892ea1929fe04244327506d9044669e6088ac50ca0500000000001976a914a9feddf7ed8cd5db68aaa9997130e83baf795d9488ac0247304402203d4871e0f1e8d2656503fea7a63c4995940d90b870d7afd3ec764139091edee80220319adde8bbd363bd653b15a1a3e3033f712d5982851ab68466f3c4aa215e480a012103e0ebb9dd2a9314f16c76a0c68ea4dd2355033f95a3294b01eaf1f6aa1aaaa3fd00000000",
			expectedAddress: "bc1qq904ynep5mvwpjxdlyecgeupg22dm8am6cfvgq",
			params:          &chaincfg.MainNetParams,
			executor:        bitcoin.TransformWitnessIntoAddress,
		},
		{
			name:            "P2WPKH testnet",
			rawTxHex:        "020000000001018d8fc62711caf7e14770f89cb0541f58ee99f67fdd607e14076dd479929e875d0100000000ffffffff02750400000000000016001426df8d15fdefcb26f04e2c5a6e562056c65e5c901a09980000000000160014ee4b99fbcd88e57fd891ba23f0ab715aae44238502483045022100ec76645cf81929a16e1eeeda75a45084833fec0cfb93ff193a706f2caf3f73fa0220592b8f9e191dcc6a3210a1e318afa55762565349a15d5ecfa47c80336ddad2a40121034ff6bbc03fb40bf7052e95eca1da0f150544bcd62859d3d06690f4460747ab7600000000",
			expectedAddress: "tb1qae9en77d3rjhlky3hg3lp2m3t2hyggu9gytf2r",
			params:          &chaincfg.TestNet3Params,
			executor:        bitcoin.TransformWitnessIntoAddress,
		},
		{
			name:            "P2SH testnet",
			rawTxHex:        "02000000000101b29ae304c5ec738d1c6e3724bf73e5240149cfb3d9a8969562b7cc6ada78bbc90100000017160014a886a99f553f4ea7ccd22ef3b9532f0149077565fdffffff02d84d02000000000017a914273dd1351e5eb34897eef8b2a7f6bc0ec7cb2da38734e7ef6e0900000017a9149e351a83688a632d53b37d50f35509866d6ab837870247304402204f096feacdf35d95ec58bb0d8a1b03797d724825c1b3ff2ed9401b3dd97e425b0220260ffc666096b4a0088a7afe18f40b6d00225a744441ef4d9d00a2bdaedf9c86012102600e7e73be1574d8a8dbf91c12055391f0f3db9b0f607da1fe123d6f5f6b807700000000",
			expectedAddress: "2N7fkNHzLSpPXxCqaKEY2NBVDGXfVUHBezL",
			params:          &chaincfg.TestNet3Params,
			executor:        bitcoin.TransformSegWithIntoAddress,
		},
		{
			name:            "P2PK",
			rawTxHex:        "010000000152f79c0676ced2de6cfc7be518431f5b7f34609f471c2150ab34623307b143d9040000006a4730440220147cd5af3a421cca0754eeca625b39dbcf603283a10700983df5be59ecaddbbb022070543929c48a4479a47b47476d5741c7a3b72ee433dba5abb860547e0cab61e00121037bbb9d724131b7904c527ee3db6f6547175507e800444188e2fdb1c38dbcbd72ffffffff013ac30c00000000001976a9143531e2b76e6dbb1f5081866aeca6fddc922c2bc188ac00000000",
			expectedAddress: "1A64vdQdq8gUu7p4vJ9xLqZRrzhRS9axoH",
			params:          &chaincfg.MainNetParams,
			executor:        bitcoin.TransformScriptSigIntoAddress,
		},
		{
			name:            "P2SH",
			rawTxHex:        "010000000001012f962a317a9ff27abc0a381a6428b7ea61fba9e051311dd500aea5f0bb3d88fb0100000017160014f1069c402ccb4b48f9f68c04fabc32aff5cd0cd7f0ffffff01703e00000000000017a914423877331b30a905240c7e1f2adee4ebaa47c5f68702483045022100c8d7cf5a94e21189b350bfaf7dfbd92b36a847736549a8cf36d4f88d4b9be7310220429623f90621560c24a6946e7ed24d7d597ce424740922c778569b64c0e6bed90121021cdb24cee0e3421c62671b9252176a432af6395fe97a1b78d1878edea0ff721000000000",
			expectedAddress: "3KcD4h8Nfa2toQvkggCxcJXXwLkR8smhu6",
			params:          &chaincfg.MainNetParams,
			executor:        bitcoin.TransformSegWithIntoAddress,
		},
		{
			name:            "P2SH_multisig",
			rawTxHex:        "010000000001045ecd4aef9b6e0d86310203ae0925f2562420c151bcd41b7464f05eed6c26a10862000000fc0047304402207e3e1158831eca394e472e43ec2a4c9f10d034a83f0f7142e6c38c243e6074f9022000b10a29bccf3c31f61e047a400d1a8d620cf8be7fb39ea5c51c6aeac83e7e6b0147304402205bc85c03a0f786bdf6a985911cf27d94d6f4c0f00295236a304967564cca492a022011e0d80900998f601290223240ed21d13dcce11b1d045383361978ac02e27c97014c69522102194e1b5671daff4edc82ce01589e7179a874f63d6e5157fa0def116acd2c3a522103a043861e123bc67ddcfcd887b167e7ff9d00702d1466524157cf3b28c7aca71b2102a49a62a9470a31ee51824f0ee859b0534a4f555c0e2d7a9d9915d6986bfc200453aeffffffff0b5c10d858331e2c60061b8c178c7a9cea7d668db500d16fceeed5b808854cad7d000000fc0047304402203299b925b1f2c87282d2889c2bb0e07372f916d7c4781f43f2e6d1403b2425fe0220466d075c56cdcf1d659dd40edcfc68298826f935beabe12f7404c7fd1e496c8601473044022048dfe509326808f9367c88da0f14968121d31b45461a11e6ed640e72f6a53a300220517914666f2f0f1d2c306de49599bf0a95f59cd57eaaef49e44a4e48a8d9e139014c69522103b5fd9803c0046386a9c7a1ac80c102ac4bc1e6dfaec036b0ca3adebe1ca961c92102b8b42d1c84d778c4fa78c609611a9cb847c3d7bff231e5751f380503c583d36321030d2c5aee1d650c2a3150e1c66a1f1e7236ecabdc12e55b0f545fff14667a515f53aeffffffffb229063113b096fe69c1c0bdb07c35655240ebf789bd25f202b58483796b06c8a3000000fdfd000047304402204d4da5303be178d649cfab85f4d6777c365934f015b773f2269e2cc4a819eaae02207f79285ddc34c6def51df243a5abc5f36179f407172bcae88feb04da1ab1b00001483045022100b831d970bc3ea88bc6b717bbd1ad8aca9bcc8e6545988ee9718db75891db2e1702200d6bf7c4b91abcc32a610cf52112e550ae853b2f216b88803b560f5adc0d9742014c69522102c44af6aea46b1b7a9373078437ecdf993b701efd2cc297414d8eab5063887dce2103546047f27105c7db32ebe5f3f8655856d2c27ecff80614b36da6e3cf84e88d8321022fa39834a8308abba605b1b2315b508a3268b5a43bc43d60c844f65db8fb78ad53aeffffffff1dd2d6d772ca3ea10e22347e19dd47f4019909ab471c8a8cdab29e0d2df00fd89a0000002322002044c55c1da36a576217259c3bc21b0c3943f7eb3ff4e3c381d9fd3502434b9e87ffffffff05c0d401000000000017a914a1932cfd432d928311b4ada550bbc468d1e909b787a08601000000000017a9146b0e7a66416f1d8598b5956576adb22daf79853e873a4a00000000000017a914ec4c73145428abbe0b1c40fbf58c59f0ef3c29f487382c05000000000017a914abb18a298e5b629bf5652f341d2cd8207ccc214a8780100200000000001976a91438d769cf2899983022b5611ab4d35bf7907dae2088ac000000040047304402202c3f94e5daf4057377d9f16d45b57e962de42fb42cb7e95a0382b7c66624980a02204098f6acd43b0391ea1b4a8102797e78895848fb7e883f98d207d14d45945a69014730440220448460edd5291a548c571ccf3a72caf47b02364035dc84f420d311e3a0c5494802205bb1cc89f20dc1e2c1f6eadb74898f8eecc46fbf488b676636b45fafaeb96e0f01695221021e6617e06bb90f621c3800e8c37ab081a445ae5527f6c5f68a022e7133f9b5fe2103bea1a8ce6369435bb74ff1584a136a7efeebfe4bc320b4d59113c92acd869f38210280631b27700baf7d472483fadfe1c4a7340a458f28bf6bae5d3234312d684c6553ae00000000",
			expectedAddress: "3JUJgXbB1WpDEJprE8wP8vEXtba36dAYbk",
			params:          &chaincfg.MainNetParams,
			executor:        bitcoin.TransformSegWithIntoAddress,
		},
		{
			name:            "Taproot",
			rawTxHex:        "02000000000101f39a811e4ef9dda29d96e587409d9eb40a92aebf4b88915953cf5367da4a8f230000000000fdffffff025820000000000000225120ff2ee0c408485441209db4d06fec042eebe01c8ecbb79ad63d98065263655f83b004000000000000225120f2b88a524a315a1b374e40671228a19418b84dcdacaa5ec724a96cf00ae4ec32014056e302a379e8ba2b12ea37f5c1b27da4920edd0813ecf72a01efad3b5212b82dc2962460bcbfceae7d960c9cd96a9ed0d61fcff5db902e2ea9623b29aa6f587600000000",
			expectedAddress: "bc1pgx93lr7npwt6snef29eyhl5aj2awa4u9f54lwleftx624dxcjt3sz23khv",
			params:          &chaincfg.MainNetParams,
			executor:        bitcoin.TransformTaprootIntoAddress,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			tx := wire.NewMsgTx(wire.TxVersion)
			err := tx.Deserialize(hex.NewDecoder(bytes.NewReader([]byte(tt.rawTxHex))))
			require.NoError(t, err)

			address, err := tt.executor(tx.TxIn[0], tt.params)
			require.NoError(t, err)

			assert.Equal(t, tt.expectedAddress, string(address))
		})
	}
}
